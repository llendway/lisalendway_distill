[
  {
    "path": "posts/2020-12-30-welcometothejungle/",
    "title": "Welcome to the Jungle ... Garden",
    "description": "Creating an R data package and a fun dataset about my garden",
    "author": [
      {
        "name": "Lisa Lendway",
        "url": {}
      }
    ],
    "date": "2020-12-30",
    "categories": [],
    "contents": "\n\nContents\nThe Jungle Garden\nCollecting the Data\nCreating {gardenR}, a Data PackageResources\nSteps\n\n\nThe Jungle Garden\nI started vegetable gardening in 2004 and have been hooked ever since. During graduate school, while learning about split-plots and nested designs, I dreamed about experimenting in my own garden but never quite found the motivation.\nThis past summer I finally decided to at least collect some data from my garden. I did this for two reasons: 1. I was curious about how much food I produced. 2. I wanted to use the data in my Introductory Data Science course at Macalester College. I knew the data would be fairly simple and I liked that it would be a bit personal and give a way for me to connect with students. This felt especially important this year while I have been teaching remotely.\nI could spend a lot of time talking about my garden, but I’ll keep it brief. I plan to eventually put a post in my “Non-R Stuff” area for those who are into gardening as much as they are into R. But, for now, I’ll just show some photos of early season vs. late season garden. Hopefully this helps illustrate why I fondly refer to it as the jungle garden. Truthfully, the garden at my old house was more of a jungle since it sprawled across my backyard more, but I think this one is still worthy of the name.\n\n\n\nJungle Garden - beginning of season\n\nJungle Garden - peak season\n\n\nI am personally most proud of the brick paths - I laid almost all of them except for the occasional help from my kids and neighbor kids who I paid $.10/brick. I also have to give my husband Chris credit for the fence and raised bed boxes, although I did make all the fence post holes (with a manual fence post digger).\nCollecting the Data\nBefore I could make a data package, I had to collect the data. This was both an awful and great experience. I think anyone who analyzes data should have a go at collecting their own data at least once. Even in this very small endeavor of mine, I learned a lot.\nI took some time thinking about the data I might want to analyze and tried my best to set up spreadsheets to collect everything I thought I would need. I made four Google sheets:\nSpending: how much I spent on seeds, plants, etc. for the garden.\nPlot coordinates: a grid to identify the various plots in the garden.\n\nPlanting dates: when, where, and how much of each seed/plant was planted\nHarvest data: how much of each vegetable variety was harvested. Each row is a “harvest” of a particular vegetable variety. So, each time I harvested a particular vegetable/variety combination, I weighed the entire harvest. There could be multiple harvests of a vegetable/variety combination in a single day. There are two exceptions: all pumpkin and winter squash (vegetable = “squash”) were weighed individually.\n\nI liked putting the data in Google sheets because I could use Jenny Bryan’s {googlesheets4} package to interact with the data as I was collecting it.\nAt the beginning the summer, I really enjoyed weighing all the harvests. It was exciting to see how much food we grew on our own! But, by mid-summer, I was already starting to get annoyed by having to collect the data. Do you notice there’s very little raspberry data? That’s because I ate it before I weighed it - usually while weeding the garden. I also noticed (just anecdotally) that I felt more pressure on myself to use all the food I harvested and not let any go to waste. So, I think my family and I did a good job eating even more of the veggies than usual and neighbors probably got annoyed with me asking them to please take some zucchinis off my hands.\nCreating {gardenR}, a Data Package\nResources\nSteps\n\n\n\n",
    "preview": "posts/2020-12-30-welcometothejungle/gardenr.png",
    "last_modified": "2020-12-31T08:29:22-06:00",
    "input_file": "welcometothejungle.utf8.md",
    "preview_width": 518,
    "preview_height": 600
  },
  {
    "path": "posts/2020-12-09-buildingdistill/",
    "title": "Building a {distill} website",
    "description": "A journey through how this website came to be",
    "author": [
      {
        "name": "Lisa Lendway",
        "url": {}
      }
    ],
    "date": "2020-12-18",
    "categories": [],
    "contents": "\n\nContents\nWhy a website?\nResources\nBuilding the siteSetting up a GitHub repo & starting the project\n\nBuilding the site for the first time\nCustomize the home page\nAdd the blog and create your first post\nFurther modify _site.yml\nPublish the site via netlify\nMake it yours!\n\nWhy a website?\nWell, I finally did it! I made a website. And to celebrate, I’m going to share how I did it. And, why did I do it? Two main reasons: 1. to share materials that might be useful for others, 2. to document some things for myself all in one place.\nI opted for a {distill} site because it seemed like it would allow me enough freedom to customize my site and not so much freedom that I would get bogged down in details (ie. choosing colors … oops, I still spent a lot of time on that).\nResources\nBefore I start, I want to share some of the resources I used.\nAlison Hill and Desirée De Leon’s webinar about Sharing on Short Notice. WATCH THIS before going any further. This is where I was first introduced to netlify and it blew my mind how easy it was to turn my html files into a website. You might even start with that first before jumping into a website. You also might find you like some of the other options they discuss more than {distill}.\nThe distill documentation, which also happens to be a … distill website!\nOther people’s distill websites: Ijeamaka Anyene, Shannon Pileggi(aka Piping Hot Data), Miles McBain, Tom Mock, and more!\nAlison Hill’s website for A+ content and design inspiration. I think I find a new resource every time I visit her site. For example, check out her talk on Recent updates in the R markdown family.\nAnd more! I’ll try to make note of difference resources I used throughout the blog.\nIf you would like to follow along with the video I created, find it here.\nBuilding the site\nNow, let’s get on to creating the site. I am going to embed YouTube videos along the way. This is actually all the same YouTube video, but I will set them at the point I am discussing so it’s easier for you to skip parts if you’d like.\nSetting up a GitHub repo & starting the project\nSee Tom Mock’s post here. I think his way of doing this makes more sense than mine. Unfortunately, I saw it after I did mine :(\nI’m trying to get into the habit of starting all my projects with a GitHub repo. So, that’s what I did here, too. Here are all the steps:\nCreate a repo\nCreate project in R Studio by cloning the repo\nLoad {distill} library\nCreate a “starter” site using the create_website() function. I used this rather than create_blog() because I wanted to to make my main page an About page rather than the blog. I will add the blog part later. Read the {distill} documentation to help you decide which you should do. Because I created my GitHub repo first, I had to do some weird things to fix the folder structure. It works, but it’s a little ugly.\nMove all files except the .Rproj one from the folder just created to the main repository folder.\nDelete the website folder (should be empty except the .Rproj file).\nDelete the README.md file in the main repository folder (when I didn’t, the site wouldn’t build later).\n\nOr follow along in the video (through minute 8:04):\n\n\nBuilding the site for the first time\nNext, we want to build the site. In order to do this in an easy way, save all your files, close R Studio and reopen it, making sure to be in the project for your distill site. When you do this, a Build tab should appear in your panel in the upper right corner (or wherever you typically have your Environment, History, etc.). Click the Build Website icon and you should see your site! (8:25 in the video, if you want to see me do it.)\nAt this point, there are many different directions you could go. I’ll tell you about what I did. If you don’t want to do a lot more customization, you can jump to ?? to find out an easy way to publish your website.\nCustomize the home page\nI wanted my “Home” page to be my “About” page. To do this, I first made some changes to the _site.yml file, deleting the “About” portion of the navbar and renaming the text for the homepage, “About”.\nThen, to start customizing my “About” page, I add a photo of myself to the index.Rmd file and put in some placeholders for places I will write some information.\nFollow along in the video (through minute 17:35):\n\n\nAdd the blog and create your first post\nIf you went the blog route from the beginning, you won’t need to do this part. Note that in the video, I did things in the wrong order\nAdd a post using create_post(\"mypost\"). This will generate an R Markdown file with the name mypost.Rmd (unless you change the slug), a _posts folder, and a folder that is titled with the date and the name of the post. By starting with the date, it will keep your posts in a nice order :)\nEdit your blog post R markdown file at will. Be sure to knit this file so that it shows up on the blog. These files are not knit automatically. That is purposeful.\nCreate a new R Markdown file with ONLY a yaml heading with a title and listing. Save it to the main repository.\nModify the _site.yml file to link the listing page. The text can be whatever you would like - this is what will show up on the navbar. The href value is the .html of the listing .Rmd file.\nAdd a customized blog preview image. Put the image you want to use in the folder for the blog post. In the yaml heading of your blog’s R Markdown file, add preview: image.png where image.png is the name of your image. By default, the preview will be the first plot generated in your R code.\nFollow along in the video (through minute 33:27):\n\n\nFurther modify _site.yml\nIn this part, I add some custom icons to the top navbar of the site. These include a personal favicon on the left side (I end up getting rid of it, though) and links to my GitHub, LinkedIn, and twitter pages (and later I add one to my YouTube channel).\nAdd the following to the _site.yml file after the navbar heading. Be careful of indentation. You can check out my file here (I have edited more since making the video, though).\n- icon: fa fa-github\n  href: https://github.com/YOUR_USERNAME\n- icon: fa fa-linkedin\n  href: https://www.linkedin.com/in/YOUR_LINKEDIN/\n- icon: fa fa-twitter\n  href: https://twitter.com/YOUR_TWITTER\nTo add a personalized favicon, add the following after navbar:, where ll.png is personal favicon. You can also add a link to a website where it goes when you click on it. Again, be careful of indenting.\n  logo:\n    image: ll.png\nFollow the video below (through minute 44:22). When I did this the first time, I made some mistakes, so I have you skipping through that part of the video.\n\n\nPublish the site via netlify\nNow that you have a website, you can easily publish it via netlify. I will show you how to link it to your GitHub repo so that every time to you push changes to GitHub, your website will reflect those changes. I recommend setting up an account on netlify first.\nWatch the video to see how I do it (through minute 48:22):\n\n\nMake it yours!\nThe last piece is to do some customization. Thanks to the wonderful {distill} authors, we can use the create_theme() function to guide us through modifying some css. I am a complete novice when it comes to css, so having an easier way to work with it is extremely helpful. I highly recommend reading through the documentation about theming and the recent updates. And read thoroughly (I may not have done that the first time)!\nUse create_theme(\"my_theme\") to generate a my_theme.css file with some starter css code.\nMake changes as desired.\nAt the bottom, you can add custom css, too. In the video, I only made one change using custom css - changing the background color. And I did it incorrectly! I tried putting it in the middle of the {distill} css code, but I needed to put it at the bottom, after the {distill} css. You can see where I do it correctly in my current css file.\nAdd theme: \"my_theme.css\" to the bottom of the _site.yml file.\nYou can watch the video until the end, if you’d like:\n\n\n\n\n\n",
    "preview": "posts/2020-12-09-buildingdistill/blog_distill_photo.png",
    "last_modified": "2020-12-18T13:52:53-06:00",
    "input_file": {},
    "preview_width": 1628,
    "preview_height": 1042
  }
]
